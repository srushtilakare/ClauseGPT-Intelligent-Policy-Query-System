{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srush\\\\Desktop\\\\Clone\\\\ClauseGPT-Intelligent-Policy-Query-System\\\\frontend\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\n// 📁 src/components/FileUpload.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [clauses, setClauses] = useState([]);\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setClauses([]);\n    setResponse('');\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file first.\");\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      setClauses(res.data.clauses || []);\n      setResponse('');\n    } catch (error) {\n      alert('File upload failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAsk = async () => {\n    if (!question) return alert(\"Please type a question.\");\n    try {\n      setLoading(true);\n      const res = await axios.post('http://localhost:5000/ask', {\n        question\n      });\n      setResponse(res.data.response || 'No response from Gemini');\n    } catch (err) {\n      setResponse('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? 'Uploading...' : 'Upload & Analyze'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), clauses.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clauses-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC4 Extracted Clauses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"clauses-list\",\n        children: clauses.map((clause, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: clause\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ask-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83E\\uDD16 Ask a Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        placeholder: \"e.g., What are the termination conditions?\",\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAsk,\n        disabled: loading,\n        children: loading ? 'Asking...' : 'Ask'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"N08/021ZmKeslHciAkJLNlhsHjE=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","clauses","setClauses","question","setQuestion","response","setResponse","loading","setLoading","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","res","post","data","error","handleAsk","err","message","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","clause","i","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/srush/Desktop/Clone/ClauseGPT-Intelligent-Policy-Query-System/frontend/src/components/FileUpload.jsx"],"sourcesContent":["// 📁 src/components/FileUpload.jsx\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './FileUpload.css';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [clauses, setClauses] = useState([]);\r\n  const [question, setQuestion] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setClauses([]);\r\n    setResponse('');\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a file first.\");\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.post('http://localhost:5000/upload', formData);\r\n      setClauses(res.data.clauses || []);\r\n      setResponse('');\r\n    } catch (error) {\r\n      alert('File upload failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAsk = async () => {\r\n    if (!question) return alert(\"Please type a question.\");\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.post('http://localhost:5000/ask', { question });\r\n      setResponse(res.data.response || 'No response from Gemini');\r\n    } catch (err) {\r\n      setResponse('Error: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? 'Uploading...' : 'Upload & Analyze'}\r\n      </button>\r\n\r\n      {clauses.length > 0 && (\r\n        <div className=\"clauses-section\">\r\n          <h3>📄 Extracted Clauses</h3>\r\n          <ul className=\"clauses-list\">\r\n            {clauses.map((clause, i) => (\r\n              <li key={i}>{clause}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"ask-section\">\r\n        <h3>🤖 Ask a Question</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={question}\r\n          placeholder=\"e.g., What are the termination conditions?\"\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n        />\r\n        <button onClick={handleAsk} disabled={loading}>\r\n          {loading ? 'Asking...' : 'Ask'}\r\n        </button>\r\n\r\n        {response && (\r\n          <div className=\"response-box\">\r\n            <strong>Answer:</strong>\r\n            <p>{response}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}