{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srush\\\\Desktop\\\\Clone\\\\ClauseGPT-Intelligent-Policy-Query-System\\\\frontend\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [clauses, setClauses] = useState([]);\n  const [filename, setFilename] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setClauses([]);\n    setAnswer(\"\");\n    setError(\"\");\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a PDF\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await axios.post(\"http://localhost:5000/upload\", formData);\n      setClauses(res.data.clauses);\n      setFilename(res.data.filename);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Failed to upload or extract clauses\");\n    }\n  };\n  const handleAsk = async () => {\n    if (!question.trim()) return;\n    try {\n      const res = await axios.post(\"http://localhost:5000/ask\", {\n        question,\n        filename\n      });\n      setAnswer(res.data.answer);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Gemini API error. Try again.\");\n      setAnswer(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ClauseGPT - PDF Clause Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload & Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC4 Extracted Clauses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), clauses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clauses.map((clause, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: clause\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No clauses detected yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83E\\uDD16 Gemini Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask about a clause...\",\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAsk,\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this), \" \", answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"\\u274C \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"YlZWhkZqa5gpZ/gRYgqDkafnFlQ=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","clauses","setClauses","filename","setFilename","question","setQuestion","answer","setAnswer","error","setError","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","res","post","data","err","handleAsk","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","length","map","clause","idx","placeholder","value","_c","$RefreshReg$"],"sources":["C:/Users/srush/Desktop/Clone/ClauseGPT-Intelligent-Policy-Query-System/frontend/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./FileUpload.css\";\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [clauses, setClauses] = useState([]);\r\n  const [filename, setFilename] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setClauses([]);\r\n    setAnswer(\"\");\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a PDF\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/upload\", formData);\r\n      setClauses(res.data.clauses);\r\n      setFilename(res.data.filename);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Failed to upload or extract clauses\");\r\n    }\r\n  };\r\n\r\n  const handleAsk = async () => {\r\n    if (!question.trim()) return;\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/ask\", {\r\n        question,\r\n        filename,\r\n      });\r\n      setAnswer(res.data.answer);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Gemini API error. Try again.\");\r\n      setAnswer(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h2>ClauseGPT - PDF Clause Extractor</h2>\r\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload & Analyze</button>\r\n\r\n      <div className=\"results\">\r\n        <h3>üìÑ Extracted Clauses</h3>\r\n        {clauses.length > 0 ? (\r\n          <ul>\r\n            {clauses.map((clause, idx) => (\r\n              <li key={idx}>{clause}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No clauses detected yet.</p>\r\n        )}\r\n\r\n        <h3>ü§ñ Gemini Response</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask about a clause...\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n        />\r\n        <button onClick={handleAsk}>Ask</button>\r\n\r\n        {answer && <p><strong>Answer:</strong> {answer}</p>}\r\n        {error && <p className=\"error\">‚ùå {error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}