{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srush\\\\Desktop\\\\Clone\\\\ClauseGPT-Intelligent-Policy-Query-System\\\\frontend\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [clauses, setClauses] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setClauses([]);\n    setAnswer(\"\");\n    setQuery(\"\");\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a PDF file first.\");\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/analyze\", formData);\n      setClauses(response.data.clauses || []);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Upload failed. See console for details.\");\n    }\n    setLoading(false);\n  };\n  const handleQuery = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/parse_query\", {\n        query\n      });\n      setAnswer(response.data.answer || \"No answer found.\");\n    } catch (error) {\n      console.error(\"Error parsing query:\", error);\n      setAnswer(\"Error fetching answer.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ClauseGPT - PDF Clause Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Analyzing...\" : \"Upload & Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), Array.isArray(clauses) && clauses.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted Clauses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clauses.map((clause, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: clause\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask a question about the PDF...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuery,\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"ITQ81Z3N8tdJYzV4nOzkrmOlMmY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","clauses","setClauses","query","setQuery","answer","setAnswer","loading","setLoading","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","data","error","console","handleQuery","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","Array","isArray","length","marginTop","map","clause","index","placeholder","value","_c","$RefreshReg$"],"sources":["C:/Users/srush/Desktop/Clone/ClauseGPT-Intelligent-Policy-Query-System/frontend/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [clauses, setClauses] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setClauses([]);\r\n    setAnswer(\"\");\r\n    setQuery(\"\");\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a PDF file first.\");\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/analyze\", formData);\r\n      setClauses(response.data.clauses || []);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"Upload failed. See console for details.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleQuery = async () => {\r\n    if (!query) return;\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/parse_query\", {\r\n        query,\r\n      });\r\n      setAnswer(response.data.answer || \"No answer found.\");\r\n    } catch (error) {\r\n      console.error(\"Error parsing query:\", error);\r\n      setAnswer(\"Error fetching answer.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h2>ClauseGPT - PDF Clause Extractor</h2>\r\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Analyzing...\" : \"Upload & Analyze\"}\r\n      </button>\r\n\r\n      {Array.isArray(clauses) && clauses.length > 0 && (\r\n        <div style={{ marginTop: \"2rem\" }}>\r\n          <h3>Extracted Clauses</h3>\r\n          <ul>\r\n            {clauses.map((clause, index) => (\r\n              <li key={index}>{clause}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask a question about the PDF...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n        <button onClick={handleQuery}>Ask</button>\r\n      </div>\r\n\r\n      {answer && (\r\n        <div style={{ marginTop: \"1rem\" }}>\r\n          <strong>Answer:</strong>\r\n          <p>{answer}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}