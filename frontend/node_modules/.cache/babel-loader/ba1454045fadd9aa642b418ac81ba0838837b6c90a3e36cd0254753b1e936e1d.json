{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srush\\\\Desktop\\\\Clone\\\\ClauseGPT-Intelligent-Policy-Query-System\\\\frontend\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [clauses, setClauses] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a PDF file!\");\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await axios.post(\"http://localhost:8000/analyze\", formData);\n      setClauses(res.data.clauses || []);\n    } catch (err) {\n      alert(\"Failed to extract clauses!\");\n    }\n    setLoading(false);\n  };\n  const handleAsk = async () => {\n    if (!query) return;\n    try {\n      const res = await axios.post(\"http://localhost:8000/parse_query\", {\n        query: query\n      });\n      setAnswer(res.data.response);\n    } catch (err) {\n      setAnswer(\"‚ùå Gemini API error. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ClauseGPT - PDF Clause Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: loading ? \"Analyzing...\" : \"Upload & Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clauses-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC4 Extracted Clauses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), clauses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No clauses detected yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clauses.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ask-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83E\\uDD16 Gemini Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask about a clause...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAsk,\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"ITQ81Z3N8tdJYzV4nOzkrmOlMmY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","clauses","setClauses","query","setQuery","answer","setAnswer","loading","setLoading","handleUpload","alert","formData","FormData","append","res","post","data","err","handleAsk","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","length","map","c","i","placeholder","value","_c","$RefreshReg$"],"sources":["C:/Users/srush/Desktop/Clone/ClauseGPT-Intelligent-Policy-Query-System/frontend/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./FileUpload.css\";\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [clauses, setClauses] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a PDF file!\");\r\n\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:8000/analyze\", formData);\r\n      setClauses(res.data.clauses || []);\r\n    } catch (err) {\r\n      alert(\"Failed to extract clauses!\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleAsk = async () => {\r\n    if (!query) return;\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:8000/parse_query\", {\r\n        query: query,\r\n      });\r\n      setAnswer(res.data.response);\r\n    } catch (err) {\r\n      setAnswer(\"‚ùå Gemini API error. Try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>ClauseGPT - PDF Clause Extractor</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload}>\r\n        {loading ? \"Analyzing...\" : \"Upload & Analyze\"}\r\n      </button>\r\n\r\n      <div className=\"clauses-section\">\r\n        <h3>üìÑ Extracted Clauses</h3>\r\n        {clauses.length === 0 ? (\r\n          <p>No clauses detected yet.</p>\r\n        ) : (\r\n          <ul>\r\n            {clauses.map((c, i) => (\r\n              <li key={i}>{c}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"ask-section\">\r\n        <h3>ü§ñ Gemini Response</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask about a clause...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n        <button onClick={handleAsk}>Ask</button>\r\n        {answer && (\r\n          <div className=\"answer-box\">\r\n            <strong>Answer:</strong> <p>{answer}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}